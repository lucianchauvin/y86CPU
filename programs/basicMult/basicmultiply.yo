                            | 
0x000:                      |     .pos 0
0x000: 30f40002000000000000 |     irmovq stack, %rsp
0x00a: 801400000000000000   |     call main 
0x013: 00                   |     halt
                            |     
                            | 
0x014:                      | main:
0x014: 30f10700000000000000 |     irmovq $7, %rcx
0x01e: 30f20b00000000000000 |     irmovq $11, %rdx
0x028: a01f                 |     pushq %rcx
0x02a: a02f                 |     pushq %rdx
0x02c: 803a00000000000000   |     call multiply
0x035: b08f                 |     popq %r8
0x037: b08f                 |     popq %r8
0x039: 90                   |     ret
                            |     
                            | 
0x03a:                      | multiply:
0x03a: 50840800000000000000 |     mrmovq 8(%rsp), %r8
0x044: 50941000000000000000 |     mrmovq 16(%rsp), %r9
0x04e: 30f00000000000000000 |     irmovq $0, %rax         #set result to 0
0x058: 30fa0000000000000000 |     irmovq $0, %r10         #register used for constant 0
0x062: 30fb0100000000000000 |     irmovq $1, %r11         #register used for constant 1
                            |     
0x06c:                      | multiplyloopa:
0x06c: 61a8                 |     subq %r10, %r8 #check if a != 0
0x06e: 738400000000000000   |     je multiplydone   #if a = 0, we are done
0x077: 61b8                 |     subq %r11, %r8 #decrease a by 1.
0x079: 6090                 |     addq %r9, %rax
0x07b: 746c00000000000000   |     jne multiplyloopa
                            |     
0x084:                      | multiplydone:
0x084: 90                   |     ret
                            |     
0x200:                      |     .pos 0x200
0x200:                      | stack:
                            | 
